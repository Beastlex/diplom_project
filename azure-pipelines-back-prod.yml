# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - backend

resources:
- repo: self

variables:
  trivyVersion: 0.18.3

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'beb29676-d1a0-4ace-ad5e-e324f622336c'
  imageRepository: 'backend'
  containerRegistry: 'acr2022alzver.azurecr.io'
  dockerfilePath: 'backend/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acr2022alzver6643f2d9-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      displayName: 'Tests with Python 3.x'
    
    - bash: pip install -r requirements.txt
      displayName: 'Install requirements'
      workingDirectory: backend

    - bash: pip install pytest flake8
      displayName: 'Install packages'

    - bash: flake8 stat_backend
      displayName: 'Static analyze *.py files'
      workingDirectory: backend
      
    - bash: pytest
      displayName: 'Unit tests'
      workingDirectory: backend

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'acr2022alzver'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: 'backend/Dockerfile'
        tags: '$(tag)'

    - upload: manifests
      artifact: manifests
    
    - script: |
        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
        sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
        trivy -v
      displayName: 'Download and install Trivy'
    
    - task: CmdLine@2
      displayName: "Run trivy scan"
      inputs:
        script: |
          trivy image --exit-code 0 --severity LOW,MEDIUM $(containerRegistry)/$(imageRepository):$(tag)
          # trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(imageRepository):$(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'project.production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'aks-alzver-proj'
              namespace: 'production'
              secretType: 'dockerRegistry'
              secretName: '$(imagePullSecret)'
              dockerRegistryEndpoint: 'acr2022alzver'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-alzver-proj'
              namespace: 'production'
              manifests: '$(Pipeline.Workspace)/manifests/deployment-back-prod.yml'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: '$(imagePullSecret)'

