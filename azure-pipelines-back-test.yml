# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - devel
  paths:
    include:
    - backend

resources:
- repo: self

variables:
  trivyVersion: 0.18.3

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '04bbf573-3c44-48cc-b856-b6767da0551f'
  imageRepository: 'backendtest'
  containerRegistry: 'acr2022alzver.azurecr.io'
  dockerfilePath: 'backend/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acr2022alzver1944e884-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    
    - bash: npm install
      displayName: 'Install requirements'
      workingDirectory: backend
    
    - bash: npm run lint
      displayName: 'Linting'
      workingDirectory: backend
    
    - bash: npm run test
      displayName: 'Perform tests'
      workingDirectory: backend
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests
      
    - script: |
        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
        sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
        trivy -v
      displayName: 'Download and install Trivy'
    
    - task: CmdLine@2
      displayName: "Run trivy scan"
      inputs:
        script: |
          trivy image --exit-code 0 --severity LOW,MEDIUM $(containerRegistry)/$(imageRepository):$(tag)
          trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(imageRepository):$(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'Beastlexdiplomproject-1387.test'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmInstaller@0
            displayName: Install helm
            inputs:
              helmVersion: 'latest'
              installKubectl: false
          - task: HelmDeploy@0
            displayName: Upgrade chart
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'aks-alzver-proj-test'
              namespace: 'test'
              command: upgrade
              chartType: FilePath
              chartPath: '$(Pipeline.Workspace)/chart/aks-alzver'
              releaseName: 'aks-alzver-test'
              valueFile: '$(Pipeline.Workspace)/chart/values-test.yaml'
              overrideValues: 'backendImage.name=$(containerRegistry)/$(imageRepository),backendImage.tag=$(tag)'
              arguments: 
              